@page "/"
@inject IJSRuntime JSRuntime;
@inject MdKaTeXService mdKaTeXService;

<div @ref="divHome">
    @Message
</div>
<div @ref="divRecentPosts">
</div>

@code {
    @* private MdKaTeXService mdKaTeXService = new MdKaTeXService(); *@
    private ElementReference divHome;
    private ElementReference divRecentPosts;
    private string Message;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            Message = "loading...";
            StateHasChanged();
            var home = await mdKaTeXService.GetPageAsync("home.md");
            if (string.IsNullOrWhiteSpace(home))
                home = $"Add home.md to create your home page";
            MarkupString md = new MarkupString(home);
            await JSRuntime.InvokeVoidAsync("markdownHelper.render", md.Value, divHome);
            StateHasChanged();
            var githubPosts = await mdKaTeXService.GetPostsAsync();
            var orderedPosts = githubPosts?.OrderByDescending(x=>x.Name).ToList();
            var recentPosts = new System.Text.StringBuilder()
                .AppendLine("### Recent Posts")
                .AppendLine("");
            foreach (var post in orderedPosts.Take(5))
            {
                recentPosts.AppendLine($"* **{post.Name}** [Read]({post.NavUrl})");
            }
            md = new MarkupString(recentPosts.ToString());
            await JSRuntime.InvokeVoidAsync("markdownHelper.render", md.Value, divRecentPosts);
            StateHasChanged();
        }
    }    
}